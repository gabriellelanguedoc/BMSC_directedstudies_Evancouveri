rename(internet_access = `internet access`,
ds_org = DS.study.org,
blood_cortisol_mcg_per_dL = `blood_cortisol_mcg/dL`) %>%
mutate(`blood_caffeine_mg` = `blood caffeine kg`*1000000) %>%
select (-c(blood caffeine kg))
clean_data <- data %>%
rename(internet_access = `internet access`,
ds_org = DS.study.org,
blood_cortisol_mcg_per_dL = `blood_cortisol_mcg/dL`) %>%
mutate(`blood_caffeine_mg` = `blood caffeine kg`*1000000) %>%
select (-c("blood caffeine kg"))
clean_data <- data %>%
rename(internet_access = `internet access`,
ds_org = DS.study.org,
blood_cortisol_mcg_per_dL = `blood_cortisol_mcg/dL`) %>%
mutate(`blood_caffeine_mg` = `blood caffeine kg`*1000000) %>%
mutate(sleep_hours = sleep.mins) %>%
select (-c("blood caffeine kg","sleep.mins"))
ggplot(clean_data, aes(x = course, y = blood_cortisol_mcg_per_dL))
ggplot(clean_data, aes(x = course, y = blood_cortisol_mcg_per_dL))
geom_boxplot()
ggplot(clean_data, aes(x = course, y = blood_cortisol_mcg_per_dL))
geom_boxplot()+
geom_point()
ggplot(clean_data, aes(x = course, y = blood_cortisol_mcg_per_dL))+
geom_boxplot()
ggplot(clean_data, aes(x = course, y = blood_cortisol_mcg_per_dL))+
geom_boxplot()+
theme_classic()
ggplot(clean_data, aes(x = course, y = blood_cortisol_mcg_per_dL))+
geom_boxplot()+
theme_classic()+
geom_point(position = position_jitterdodge())
my_cols = c("Purple-Ring Topsnail" = "orchid3", "Red Turban Snail" = "lavender")
ggplot(clean_data, aes(x = course, y = blood_cortisol_mcg_per_dL))+
geom_boxplot()+
theme_classic()+
my_cols = c("Purple-Ring Topsnail" = "orchid3", "Red Turban Snail" = "lavender")
my_cols = c("Purple-Ring Topsnail" = "orchid3", "Red Turban Snail" = "lavender")
ggplot(clean_data, aes(x = course, y = blood_cortisol_mcg_per_dL)) +
geom_boxplot()
my_cols = c("Purple-Ring Topsnail" = "orchid3", "Red Turban Snail" = "lavender")
ggplot(clean_data, aes(x = course, y = blood_cortisol_mcg_per_dL)) +
geom_boxplot() +
theme_classic()
my_cols = c("Purple-Ring Topsnail" = "orchid3", "Red Turban Snail" = "lavender")
ggplot(clean_data, aes(x = course, y = blood_cortisol_mcg_per_dL)) +
geom_boxplot() +
theme_classic() +
scale_color_manual(values = my_cols) +
scale_fill_manual(values = my_cols)
clean_data <- data %>%
rename(internet_access = `internet access`,
ds_org = DS.study.org,
blood_cortisol_mcg_per_dL = `blood_cortisol_mcg/dL`) %>%
mutate(`blood_caffeine_mg` = `blood caffeine kg`*1000000) %>%
mutate(sleep_hours = sleep.mins) %>%
select (-c("blood caffeine kg","sleep.mins"))
ds_org = as.factor(ds_.org),
```{r}
clean_data <- data %>%
rename(internet_access = `internet access`,
ds_org = DS.study.org,
blood_cortisol_mcg_per_dL = `blood_cortisol_mcg/dL`) %>%
mutate(`blood_caffeine_mg` = `blood caffeine kg`*1000000) %>%
mutate(sleep_hours = sleep.mins) %>%
select (-c("blood caffeine kg","sleep.mins")) %>%
ds_org = as.factor(ds_.org),
clean_data %>% filter(student == "Gabrielle")
clean_data <- data %>%
rename(internet_access = `internet access`,
ds_org = DS.study.org,
blood_cortisol_mcg_per_dL = `blood_cortisol_mcg/dL`) %>%
mutate(`blood_caffeine_mg` = `blood caffeine kg`*1000000) %>%
mutate(sleep_hours = sleep.mins) %>%
select (-c("blood caffeine kg","sleep.mins")
ds_org = as.factor(ds_.org)
clean_data <- data %>%
rename(internet_access = `internet access`,
ds_org = DS.study.org,
blood_cortisol_mcg_per_dL = `blood_cortisol_mcg/dL`) %>%
mutate(`blood_caffeine_mg` = `blood caffeine kg`*1000000) %>%
mutate(sleep_hours = sleep.mins) %>%
select (-c("blood caffeine kg","sleep.mins"))
ds_org = as.factor(ds_.org)
clean_data <- data %>%
rename(internet_access = `internet access`,
ds_org = DS.study.org,
blood_cortisol_mcg_per_dL = `blood_cortisol_mcg/dL`) %>%
mutate(`blood_caffeine_mg` = `blood caffeine kg`*1000000) %>%
mutate(sleep_hours = sleep.mins) %>%
select (-c("blood caffeine kg","sleep.mins"))
ds_org = as.factor(ds_org)
clean_data <- data %>%
rename(internet_access = `internet access`,
ds_org = DS.study.org,
blood_cortisol_mcg_per_dL = `blood_cortisol_mcg/dL`) %>%
mutate(`blood_caffeine_mg` = `blood caffeine kg`*1000000) %>%
mutate(sleep_hours = sleep.mins/60) %>%
select (-c("blood caffeine kg","sleep.mins"))
clean_data <- data %>%
rename(internet_access = `internet access`,
ds_org = DS.study.org,
blood_cortisol_mcg_per_dL = `blood_cortisol_mcg/dL`) %>%
mutate(`blood_caffeine_mg` = `blood caffeine kg`*1000000) %>%
mutate(sleep_hours = sleep.mins/60) %>%
select (-c("blood caffeine kg","sleep.mins"))
clean_data <- data %>%
rename(internet_access = `internet access`,
ds_org = DS.study.org,
blood_cortisol_mcg_per_dL = `blood_cortisol_mcg/dL`) %>%
mutate(`blood_caffeine_mg` = `blood caffeine kg`*1000000) %>%
mutate(sleep_hours = sleep.mins/60) %>%
select (-c("blood caffeine kg","sleep.mins"))
ds_org = as.factor(ds_org)
clean_data <- data %>%
rename(internet_access = `internet access`,
ds_org = DS.study.org,
blood_cortisol_mcg_per_dL = `blood_cortisol_mcg/dL`) %>%
mutate(`blood_caffeine_mg` = `blood caffeine kg`*1000000,
sleep_hours = sleep.mins/60,
ds_org = as.factor(ds_org),
course = as.factor(course),
internet_access = as.factor(internet_access))
```{r}
clean_data <- data %>%
rename(internet_access = `internet access`,
ds_org = DS.study.org,
blood_cortisol_mcg_per_dL = `blood_cortisol_mcg/dL`) %>%
mutate(`blood_caffeine_mg` = `blood caffeine kg`*1000000,
sleep_hours = sleep.mins/60,
ds_org = as.factor(ds_org),
course = as.factor(course),
internet_access = as.factor(internet_access))
select (-c("blood caffeine kg","sleep.mins"))
clean_data <- data %>%
rename(internet_access = `internet access`,
ds_org = DS.study.org,
blood_cortisol_mcg_per_dL = `blood_cortisol_mcg/dL`) %>%
mutate(`blood_caffeine_mg` = `blood caffeine kg`*1000000,
sleep_hours = sleep.mins/60,
ds_org = as.factor(ds_org),
course = as.factor(course),
internet_access = as.factor(internet_access)) %>%
select (-c("blood caffeine kg","sleep.mins"))
View(clean_data)
ggplot(clean_data, aes(x = course, y = blood_cortisol_mcg_per_dL, fill = course)) +
geom_boxplot() +
theme_classic() +
my_cols = c("Purple-Ring Topsnail" = "orchid3", "Red Turban Snail" = "lavender")
my_cols = c("Purple-Ring Topsnail" = "orchid3", "Red Turban Snail" = "lavender")
ggplot(clean_data, aes(x = course, y = blood_cortisol_mcg_per_dL, fill = course)) +
geom_point(aes(colour = course), position = position_jitterdodge()) +
geom_boxplot(alpha = 0.8) +
scale_color_manual(values = my_cols) +
scale_fill_manual(values = my_cols)
ggplot(clean_data, aes(x = course, y = blood_cortisol_mcg_per_dL, fill = course)) +
geom_point(aes(colour = course), position = position_jitterdodge()) +
geom_boxplot(alpha = 0.8) +
scale_color_manual(values = my_cols) +
scale_fill_manual(values = my_cols)
ggplot(clean_data, aes(x = course, y = blood_cortisol_mcg_per_dL, fill = course)) +
geom_point(aes(colour = course), position = position_jitterdodge()) +
geom_boxplot(alpha = 0.8) +
scale_color_manual(values = my_cols) +
scale_fill_manual(values = my_cols)
ggplot(clean_data, aes(x = course, y = blood_cortisol_mcg_per_dL, fill = course)) +
geom_point(aes(colour = course), position = position_jitterdodge()) +
geom_boxplot(alpha = 0.8) +
scale_color_manual(values = my_cols) +
scale_fill_manual(values = my_cols)
my_cols
my_cols("course" = red)
my_cols = c("course" = red)
my_cols = c("course" = "red")
ggplot(clean_data, aes(x = course, y = blood_cortisol_mcg_per_dL, fill = course)) +
geom_point(aes(colour = course), position = position_jitterdodge()) +
geom_boxplot(alpha = 0.8) +
scale_color_manual(values = my_cols) +
scale_fill_manual(values = my_cols)
my_cols = c("course" = "red")
ggplot(clean_data, aes(x = course, y = blood_cortisol_mcg_per_dL, fill = course)) +
geom_boxplot(alpha = 0.8) +
scale_color_manual(values = my_cols) +
scale_fill_manual(values = my_cols)
ggplot(clean_data, aes(x = course, y = blood_cortisol_mcg_per_dL, fill = course)) +
geom_bar()
ggplot(clean_data, aes(x = course, y = blood_cortisol_mcg_per_dL, fill = course)) +
geom_bar(clean_data)
ggplot(clean_data, aes(x = course, y = blood_cortisol_mcg_per_dL, fill = course)) +
geom_boxplot(clean_data)
ggplot(clean_data, aes(x = course, y = blood_cortisol_mcg_per_dL, fill = course)) +
geom_boxplot()
ggplot(clean_data(aes(x = blood_caffeine_mg, y = student, fill = student)) +
geom_point()
ggplot(clean_data(aes(x = blood_caffeine_mg, y = student, fill = student)) +
ggplot(clean_data(aes(x = blood_caffeine_mg, y = student, fill = student))) +
geom_point()
ggplot(clean_data,aes(x = blood_caffeine_mg, y = student, fill = student)) +
geom_point()
ggplot(clean_data,aes(x = ds_org, y = student, fill = student)) +
geom_point()
ggplot(clean_data,aes(x = ds_org, y = internet_access, fill = student)) +
geom_point()
ggplot(clean_data,aes(x = ds_org, y = blood_cortisol_mcg_per_dL, fill = student)) +
geom_point()
check_model(clean_data)
clean.mod <- lm(course ~ blood_cortisol_mcg_per_dL, data = clean_data)
summary(clean.mod)
clean_data <- data %>%
rename(internet_access = `internet access`,
ds_org = DS.study.org,
blood_cortisol_mcg_per_dL = `blood_cortisol_mcg/dL`) %>%
mutate(`blood_caffeine_mg` = `blood caffeine kg`*1000000,
sleep_hours = sleep.mins/60,
ds_org = as.factor(ds_org),
internet_access = as.factor(internet_access)) %>%
select (-c("blood caffeine kg","sleep.mins"))
clean.mod <- lm(course ~ blood_cortisol_mcg_per_dL, data = clean_data)
clean.mod <- lm(course ~ blood_cortisol_mcg_per_dL, data = clean_data)
clean_data <- data %>%
rename(internet_access = `internet access`,
ds_org = DS.study.org,
blood_cortisol_mcg_per_dL = `blood_cortisol_mcg/dL`) %>%
mutate(`blood_caffeine_mg` = `blood caffeine kg`*1000000,
sleep_hours = sleep.mins/60,
course = as.factor(course),
ds_org = as.factor(ds_org),
internet_access = as.factor(internet_access)) %>%
select (-c("blood caffeine kg","sleep.mins"))
clean.mod <- lm(blood_cortisol_mcg_per_dL ~ course, data = clean_data)
summary(clean.mod)
clean.mod <- lm(blood_cortisol_mcg_per_dL ~ course, data = clean_data)
summary(clean.mod)
check_model(clean_data)
clean_mod <- lm(blood_cortisol_mcg_per_dL ~ course, data = clean_data)
summary(clean_mod)
check_model(clean_mod)
bartlett.test(blood_cortisol_mcg_per_dL ~ course, data = clean_data)
clean_anova = aov(blood_cortisol_mcg_per_dL ~ course, clean_data)
clean_anova = aov(blood_cortisol_mcg_per_dL ~ course, clean_data)
summary(clean_anova)
clean_mod <- lm(blood_cortisol_mcg_per_dL ~ course, data = clean_data)
summary(clean_mod)
check_model(clean_mod)
clean_mod <- lm(blood_cortisol_mcg_per_dL ~ course, data = clean_data)
summary(clean_mod)
setwd("~/Desktop/ADA R Studio/T08_glmBeasts")
knitr::opts_chunk$set(echo = TRUE)
library(car)
library(performance)
library(DHARMa)
library(car)
library(performance)
install.packages("DHARMa")
install.packages("fitdistrplus")
install.packages("gamlss")
library(DHARMa)
library(fitdistrplus)
library(gamlss)
library(tidyverse)
# are you in the right working dir?
data <- read_delim("beasts.csv", delim = ',')
ggplot(beasts, aes(x = area, y = native)) +
geom_point() +
theme_bw()
library(car)
library(performance)
install.packages("DHARMa")
install.packages("fitdistrplus")
install.packages("gamlss")
library(DHARMa)
library(fitdistrplus)
library(gamlss)
library(tidyverse)
# are you in the right working dir?
install.packages("DHARMa")
knitr::opts_chunk$set(echo = TRUE)
data <- read_delim("beasts.csv", delim = ',')
library(car)
library(performance)
#install.packages("DHARMa")
#install.packages("fitdistrplus")
#install.packages("gamlss")
library(DHARMa)
library(fitdistrplus)
library(gamlss)
library(tidyverse)
data <- read_delim("beasts.csv", delim = ',')
```{r}
data <- read_delim("beasts.csv", delim = ',')
beasts <- data %>%
rename(country = Country, native = Native, danger = Level_of_danger, temp = Temperature, area = Country_size)
ggplot(beasts, aes(x = log2(area), y = temp)) +
geom_point() +
theme_bw()
View(beasts)
View(beasts)
knitr::opts_chunk$set(echo = TRUE)
```{r, message = F}
beasts <- beasts %>%
mutate(logArea = log2(area))
library(car)
library(performance)
#install.packages("DHARMa")
#install.packages("fitdistrplus")
#install.packages("gamlss")
library(DHARMa)
library(fitdistrplus)
library(gamlss)
library(tidyverse)
beasts <- beasts %>%
mutate(logArea = log2(area))
View(beasts)
plotResiduals(sim, form = beasts$logArea, xlab = "log2(Country Area)")
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2
library(car)
library(performance)
install.packages("DHARMa")
install.packages("fitdistrplus")
install.packages("gamlss")
library(DHARMa)
library(fitdistrplus)
library(gamlss)
library(tidyverse)
# are you in the right working dir?
# Chunk 3
data <- read_delim("beasts.csv", delim = ',')
# Chunk 4
beasts <- data %>%
rename(country = Country, native = Native, danger = Level_of_danger, temp = Temperature, area = Country_size)
# Chunk 5
ggplot(beasts, aes(x = area, y = native)) +
geom_point() +
theme_bw()
# Chunk 6
ggplot(beasts, aes(x = log2(area), y = native)) +
geom_point() +
theme_bw()
# Chunk 7
ggplot(beasts, aes(x = log2(area), y = temp)) +
geom_point() +
theme_bw()
# Chunk 8
cor(beasts$logArea, beasts$temp)
# Chunk 9
vif(glm(native ~ temp + logArea, data = beasts))
# Chunk 10
glm.mod <- glm(native ~ temp + logArea,
family = binomial(link = "logit"),
data = beasts)
# Chunk 11
?glm
# Chunk 12
check_model(glm.mod)
# Chunk 13
sim <- simulateResiduals(glm.mod)
plot(sim)
# Chunk 14
plotResiduals(sim, form = beasts$logArea, xlab = "log2(Country Area)")
# Chunk 15
summary(glm.mod)
# Chunk 16
data <- read_delim("temp_data.csv", delim = ',')
# Chunk 17
ggplot(data, aes(x = minTemp)) +
geom_freqpoly() +
theme_minimal()
# Chunk 18
shapiro.test(data$minTemp)
# Chunk 19
descdist(data$minTemp)
# Chunk 20
par(mfrow = c(2,2)) # sets our plot window to be 2 x 2 (instead of a single plot)
mGA <- histDist(data$minTemp, "GA", density = T, main = "Gamma")
mlN <- histDist(data$minTemp, "LOGNO", density = T, main = "lNorm")
mWE <- histDist(data$minTemp, "WEI", density = T, main = "Weibull")
mNO <- histDist(data$minTemp, "NO", density = T, main = "Normal") # for comparison to a normal distribution!
# Chunk 21
fit.gamma <- fitdist(data$minTemp, "gamma")
fit.lnorm <- fitdist(data$minTemp, "lnorm")
fit.weibull <- fitdist(data$minTemp, "weibull")
fit.norm <- fitdist(data$minTemp, "norm")
plot(fit.gamma)
plot(fit.lnorm)
plot(fit.weibull)
plot(fit.norm)
# Chunk 22
GAIC(mGA, mlN, mWE, mNO)
plotResiduals(sim, form = beasts$logArea, xlab = "log2(Country Area)")
summary(glm.mod)
knitr::opts_chunk$set(echo = TRUE)
library(car)
library(performance)
#install.packages("DHARMa")
#install.packages("fitdistrplus")
#install.packages("gamlss")
library(DHARMa)
library(fitdistrplus)
library(gamlss)
library(tidyverse)
data <- read_delim("beasts.csv", delim = ',')
beasts <- data %>%
rename(country = Country, native = Native, danger = Level_of_danger, temp = Temperature, area = Country_size)
ggplot(data = beasts ,aes(x = (area), y = native)) +
geom_point() +
theme_bw()
beasts <- beasts %>%
mutate(logArea = log2(area))
cor(beasts$logArea, beasts$temp)
vif(glm(native ~ temp + logArea, data = beasts))
#if your colinearly is under three your good! if its over three its grey area and over five you cant use it
glm.mod <- glm(native ~ temp + logArea,
family = binomial(link = "logit"),
data = beasts)
library(car)
library(performance)
install.packages("DHARMa")
install.packages("fitdistrplus")
install.packages("gamlss")
library(DHARMa)
library(fitdistrplus)
library(gamlss)
library(tidyverse)
# are you in the right working dir?
install.packages("DHARMa")
data <- read_delim("temp_data.csv", delim = ',')
data <- read_delim("temp_data.csv", delim = ',')
ggplot(data, aes(x = minTemp)) +
geom_freqpoly() +
theme_minimal()
shapiro.test(data$minTemp)
descdist(data$minTemp)
par(mfrow = c(2,2)) # sets our plot window to be 2 x 2 (instead of a single plot)
mGA <- histDist(data$minTemp, "GA", density = T, main = "Gamma")
mlN <- histDist(data$minTemp, "LOGNO", density = T, main = "lNorm")
mWE <- histDist(data$minTemp, "WEI", density = T, main = "Weibull")
mNO <- histDist(data$minTemp, "NO", density = T, main = "Normal") # for comparison to a normal distribution!
#colour version
my_cols = c("low_salinity" = "lightskyblue1", "high_temp" = "indianred", "control" = "thistle")
ggplot(clean_growth, aes(x = treatment, y = total_growth, fill = treatment)) +
geom_boxplot(alpha = 0.8) +
theme_classic() +
ylab("Total Tube Growth (mm)") +
xlab("Treatment") +
scale_fill_manual(values = my_cols) +
scale_colour_manual(values = my_cols) +
theme(legend.position="none") +
scale_x_discrete(labels = c('Control','Temperature','Salinity'))
library(mgcv)
library(fitdistrplus)
library(goft)
library(gamlss)
library(here)
library(patchwork)
library(LambertW)
library(viridis)
library(performance)
library(dplyr)
library(tidyverse)
library(readr)
tube_growth <- read_csv("tube-growth.csv")
setwd("~/Desktop/directedstudies/Data")
library(readr)
tube_growth <- read_csv("Raw Data/tube-growth.csv")
View(tube_growth)
library(mgcv)
library(fitdistrplus)
library(goft)
library(gamlss)
library(here)
library(patchwork)
library(LambertW)
library(viridis)
library(performance)
library(dplyr)
library(tidyverse)
library(readr)
tube_growth <- read_csv("tube-growth.csv")
# Manipulated data for intial visualization
clean_growth <- tube_growth %>%
select(total_growth, treatment)
# Manipulated data for GAMLSS Model (Important note; Could not get the model to run using worm_id and string_loss as factors. This is likely because of the small sample size (N=90) creating to much noise)
model_growth <- tube_growth %>%
dplyr::select(c(treatment,total_growth, string_loss, mortality, amt_cut_mm, worm_id)) %>%
mutate(worm_id = as.factor(worm_id))
#colour version
my_cols = c("low_salinity" = "lightskyblue1", "high_temp" = "indianred", "control" = "thistle")
ggplot(clean_growth, aes(x = treatment, y = total_growth, fill = treatment)) +
geom_boxplot(alpha = 0.8) +
theme_classic() +
ylab("Total Tube Growth (mm)") +
xlab("Treatment") +
scale_fill_manual(values = my_cols) +
scale_colour_manual(values = my_cols) +
theme(legend.position="none") +
scale_x_discrete(labels = c('Control','Temperature','Salinity'))
ggsave(plot = last_plot(), filename = "total_tube_growth_boxplot_colourized.pdf")
#grey scale version
my_cols_grey = c("low_salinity" = "grey70", "high_temp" = "grey50", "control" = "grey30")
ggplot(clean_growth, aes(x = treatment, y = total_growth, fill = treatment)) +
geom_boxplot(alpha = 0.8) +
theme_classic() +
ylab("Total Tube Growth (mm)") +
xlab("Treatment") +
scale_fill_manual(values = my_cols_grey) +
scale_colour_manual(values = my_cols_grey) +
theme(legend.position="none") +
scale_x_discrete(labels = c('Control','Temperature','Salinity'))
ggsave(plot = last_plot(), filename = "total_tube_growth_boxplot_greyscale.pdf")
